<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.studyroom.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.studyroom.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="real_name" property="realName"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="role" property="role"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, password, real_name, phone, email, role, create_time, update_time
    </sql>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        WHERE id = #{id}
    </select>

    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        WHERE username = #{username}
    </select>

    <select id="selectByRole" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
        WHERE role = #{role}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM user
    </select>

    <insert id="insert" parameterType="com.studyroom.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, password, real_name, phone, email, role, create_time, update_time)
        VALUES (#{username}, #{password}, #{realName}, #{phone}, #{email}, #{role}, NOW(), NOW())
    </insert>

    <update id="update" parameterType="com.studyroom.entity.User">
        UPDATE user
        SET username = #{username},
            password = #{password},
            real_name = #{realName},
            phone = #{phone},
            email = #{email},
            role = #{role},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE user
        SET role = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM user WHERE id = #{id}
    </delete>
</mapper> 